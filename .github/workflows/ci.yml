# SPDX-FileCopyrightText: 2022  Emmanuele Bassi
# SPDX-License-Identifier: GPL-3.0-or-later

name: Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-4-dev \
          libadwaita-1-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libgstreamer-plugins-bad1.0-dev \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          gstreamer1.0-plugins-bad \
          gstreamer1.0-plugins-ugly \
          gstreamer1.0-libav \
          meson \
          ninja-build \
          gettext

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Configure meson
      run: meson setup _build --buildtype=release

    - name: Build
      run: meson compile -C _build

    - name: Test
      run: meson test -C _build --verbose

    - name: Create Linux package
      run: |
        mkdir -p dist
        tar -czf dist/amberol-linux-x86_64.tar.gz \
          -C _build/src amberol \
          -C ../data amberol.gresource

    - name: Upload Linux build
      uses: actions/upload-artifact@v4
      with:
        name: amberol-linux
        path: dist/

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-gtk4
          mingw-w64-x86_64-libadwaita
          mingw-w64-x86_64-gstreamer
          mingw-w64-x86_64-gst-plugins-base
          mingw-w64-x86_64-gst-plugins-good
          mingw-w64-x86_64-gst-plugins-bad
          mingw-w64-x86_64-gst-plugins-ugly
          mingw-w64-x86_64-rust
          mingw-w64-x86_64-meson
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-gettext

    - name: Configure meson
      run: meson setup _build --buildtype=release

    - name: Build
      run: meson compile -C _build

    - name: Create portable distribution
      shell: pwsh
      run: |
        # Create distribution directory
        $distDir = "amberol-windows-portable"
        $binDir = "$distDir\bin"
        $libDir = "$distDir\lib"
        $shareDir = "$distDir\share"
        
        New-Item -ItemType Directory -Force -Path $binDir, $libDir, $shareDir
        
        # Copy main executable
        Copy-Item "_build\src\amberol.exe" $binDir
        
        # Copy required DLLs
        $dllsNeeded = @(
          "libgtk-4-1.dll",
          "libadwaita-1-0.dll",
          "libgstreamer-1.0-0.dll",
          "libgstbase-1.0-0.dll",
          "libgstaudio-1.0-0.dll",
          "libgstplayer-1.0-0.dll",
          "libglib-2.0-0.dll",
          "libgobject-2.0-0.dll",
          "libgio-2.0-0.dll",
          "libcairo-2.dll",
          "libpango-1.0-0.dll",
          "libharfbuzz-0.dll",
          "libfreetype-6.dll",
          "libfontconfig-1.dll",
          "libexpat-1.dll",
          "libbrotlidec.dll",
          "libbrotlicommon.dll",
          "libpng16-16.dll",
          "libffi-7.dll",
          "libintl-8.dll",
          "libiconv-2.dll",
          "libpcre-1.dll",
          "zlib1.dll",
          "libwinpthread-1.dll",
          "libgcc_s_seh-1.dll",
          "libstdc++-6.dll"
        )
        
        foreach ($dll in $dllsNeeded) {
          $source = "C:\msys64\mingw64\bin\$dll"
          if (Test-Path $source) {
            Copy-Item $source $binDir -Force
          }
        }
        
        # Copy GStreamer plugins
        $gstPluginDir = "C:\msys64\mingw64\lib\gstreamer-1.0"
        if (Test-Path $gstPluginDir) {
          Copy-Item $gstPluginDir "$libDir\gstreamer-1.0" -Recurse -Force
        }
        
        # Copy application resources
        Copy-Item "_build\data\*.gresource" $shareDir -ErrorAction SilentlyContinue
        
        # Copy launcher script and docs
        Copy-Item "amberol.bat" $distDir -Force
        Copy-Item "README-Windows.md" $distDir -Force
        Copy-Item "LICENSES\GPL-3.0-or-later.txt" "$distDir\LICENSE.txt" -Force

    - name: Create Windows ZIP
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path dist
        Compress-Archive -Path "amberol-windows-portable\*" -DestinationPath "dist\amberol-windows-portable.zip"

    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: amberol-windows
        path: dist/

  build-flatpak:
    name: Build Flatpak
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-45
      options: --privileged
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build Flatpak
      uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v6
      with:
        bundle: amberol.flatpak
        manifest-path: io.bassi.Amberol.json
        cache-key: flatpak-builder-${{ github.sha }}

    - name: Upload Flatpak
      uses: actions/upload-artifact@v4
      with:
        name: amberol-flatpak
        path: amberol.flatpak